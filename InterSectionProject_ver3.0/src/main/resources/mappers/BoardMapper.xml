<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.human.ISP.dao.BoardDAO">
	
	<!-- 전체게시글수 -->
	<select id="selectCount" resultType="int">
   		select count(*) from board
	</select>
	
	<!-- 카테고리별 게시글수 -->
	<select id="selectCountByCategory" parameterType="string" resultType="int">
   		select count(*) from board where board_category = #{board_category}
	</select>
	
	<!-- 게시글 1개 가져오기 -->
	<select id="selectByIdx" parameterType="int" resultType="BoardVO" >
		select * from board where board_idx = #{board_idx}
	</select>
	
	<!-- 게시글 저장 -->
	<insert id="insert" parameterType="BoardVO">
		insert into board
			(board_idx,user_idx, board_subject, board_content, board_regdate, board_category)
		values
			(board_idx_seq.nextval,#{user_idx}, #{board_subject},#{board_content}, sysdate, #{board_category})
	</insert>
	<!-- 게시글수정 -->
	<update id="update" parameterType="BoardVO">
		update board set 
		board_subject = #{board_subject},
		board_content = #{board_content},
		board_isPublic = #{board_isPublic}
		where 
		board_idx= #{board_idx}
	</update>
	
	<!-- 삭제시 상태변경 -->
	<update id="delete" parameterType="int">
		update board set 
		board_isDelete = 'Y' where board_idx=#{board_idx}
	</update>
	
	<!-- 1페이지 얻기 -->
	<select id="selectList" parameterType="hashmap" resultType="BoardVO">	
		select
			R.*
		from
			( select 
				rownum rnum, Q.*
			  from	
				(select * from board order by board_idx desc) Q
			  where
			  	<![CDATA[
			  	rownum  <= #{endNo}
			  	]]>
			) R
		where
			<![CDATA[
			rnum  >= #{startNo}
			]]>
	</select>
	
	<!-- 카테고리별로 1페이지 얻기 -->
	<!-- 쿼리문 확인 필요 (카테고리 조건문) -->
	<select id="selectListByCategory" parameterType="hashmap" resultType="BoardVO">	
		select
			R.*
		from
			( select 
				rownum rnum, Q.*
			  from	
				(select * from board where board_category = #{board_category} and board_isDelete = 'N' order by board_idx desc) Q
			  where
			  	<![CDATA[
			  	rownum  <= #{endNo}*1
			  	]]>
			) R
		where
			<![CDATA[
			rnum  >= #{startNo}*1
			]]>
	</select>
	
	<!-- 관리자페이지에서 쓰는 매퍼 -->	
	
	<!-- 메일 목록 가져오기 -->
	<select id="selectMailList" resultType="BoardVO">
		select * from board where board_category = 'mail'
	</select>
	
	<!-- 메일 목록 페이징 -->
	<select id="selectMailPageList" parameterType="hashmap" resultType="BoardVO">	
		select
			R.*
		from
			( select 
				rownum rnum, Q.*
			  from	
				(select * from board where board_category = 'mail' order by board_idx desc) Q
			  where
			  	<![CDATA[
			  	rownum  <= #{endNo}
			  	]]>
			) R
		where
			<![CDATA[
			rnum  >= #{startNo}
			]]>
	</select>
	
	<!-- 메일 게시글수 -->
	<select id="selectCountMail" resultType="int">
   		select count(*) from board where board_category = 'mail'
	</select>
	
		<!-- 게시글 저장 -->
	<insert id="boardNoticeInsert" parameterType="Object">
		insert into board
			(board_idx,user_idx, board_subject, board_content,board_regdate,board_category)
		values
			(board_idx_seq.nextval,#{user_idx}, #{board_subject},#{board_content}, sysdate,#{board_category})
	</insert>
	
	<!-- 카테고리별 삭제된 게시물 가져오기 -->
	<select id="selectDeleteByCategory" parameterType="String" resultType="int">
   		select count(*) from board where board_isDelete = #{board_isDelete} and board_category = #{board_category}
	</select>
	
		<!-- 게시글수정 -->
	<update id="noticeupdate" parameterType="BoardVO">
		update board set 
		board_subject = #{board_subject},
		board_content = #{board_content}
		where 
		board_idx= #{board_idx}
	</update>
	
	
	<!-- 유저아이디엑스로 1:1문의내역 게시판 총갯수가져오기 -->
	<select id="selectByUserIdxCount" parameterType="int" resultType="int" >
		select count(*) from board where user_idx = #{user_idx}
	</select>
	
	<!-- 유저아이디엑스로  게시판 목록 페이징 -->
	<select id="selectListByUserIdx" parameterType="hashmap" resultType="BoardVO">	
		select
			R.*
		from
			( select 
				rownum rnum, Q.*
			  from	
				(select * from board where user_idx = #{user_idx} order by user_idx desc) Q
			  where
			  	<![CDATA[
			  	rownum  <= #{endNo}*1
			  	]]>
			) R
		where
			<![CDATA[
			rnum  >= #{startNo}*1
			]]>
	</select>	
	
	<!-- 가장최근 게시글 가져오기 -->
	<select id="selectCurrentBoardIdx" resultType="int">
		select Max(board_idx) from board
	</select>

	
	
</mapper>